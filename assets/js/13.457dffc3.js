(window.webpackJsonp=window.webpackJsonp||[]).push([[13],{178:function(e,t,n){e.exports=n.p+"assets/img/value-node-settings.3777fb89.png"},271:function(e,t,n){"use strict";n.r(t);var a={props:["slot-key"],mounted:function(){this.$nextTick(function(){this.$vuepress.$emit("AsyncMarkdownContentMounted",this.slotKey)})}},s=n(6),r=Object(s.a)(a,function(){var e=this,t=e.$createElement,a=e._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":e.slotKey}},[a("h1",{attrs:{id:"value"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#value","aria-hidden":"true"}},[e._v("#")]),e._v(" value")]),e._v(" "),a("p",[e._v("Die "),a("code",[e._v("value")]),e._v(" Node kann Datenpunkte setzen "),a("em",[e._v("und")]),e._v(" erzeugt Events wenn vom Schnittstellenprozess ein den Datenpunkt\nbetreffendes Ereignis eingeht.")]),e._v(" "),a("p",[e._v("Beispiel: Wird die "),a("code",[e._v("value")]),e._v(" Node am Anfang platziert, startet sie den Flow wenn z.B. ein Schaltaktor den Zustand ändert. Wird die Node ans Ende positioniert kann sie den Zustand des Schaltaktors setzen.")]),e._v(" "),a("p",[a("img",{attrs:{src:n(178),alt:"value node settings"}})]),e._v(" "),a("h2",{attrs:{id:"attribute"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#attribute","aria-hidden":"true"}},[e._v("#")]),e._v(" Attribute")]),e._v(" "),a("h3",{attrs:{id:"ccu"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#ccu","aria-hidden":"true"}},[e._v("#")]),e._v(" CCU")]),e._v(" "),a("p",[e._v("Die zu verwendende CCU-Konfiguration.")]),e._v(" "),a("h3",{attrs:{id:"topic"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#topic","aria-hidden":"true"}},[e._v("#")]),e._v(" Topic")]),e._v(" "),a("p",[e._v("Das Topic ist an "),a("a",{attrs:{href:"https://de.wikipedia.org/wiki/MQTT",target:"_blank",rel:"noopener noreferrer"}},[e._v("MQTT"),a("OutboundLink")],1),e._v(" angelehnt und dient zu späteren\nIdentifizierung des Werts.")]),e._v(" "),a("h3",{attrs:{id:"interface"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#interface","aria-hidden":"true"}},[e._v("#")]),e._v(" Interface")]),e._v(" "),a("p",[e._v("Hier wird das Interface gewählt, welches den gewünschten Datenpunkt enthält.")]),e._v(" "),a("h3",{attrs:{id:"channel"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#channel","aria-hidden":"true"}},[e._v("#")]),e._v(" Channel")]),e._v(" "),a("p",[e._v("Der Kanal dessen Datenpunkte verwendet werden solln.\nEr besteht aus der Serien- sowie der Kanalnummer.\nEine Autovervollständigung hilft bei der Auswahl anhand der Klarnamen.")]),e._v(" "),a("h3",{attrs:{id:"datapoint"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#datapoint","aria-hidden":"true"}},[e._v("#")]),e._v(" Datapoint")]),e._v(" "),a("p",[e._v("Der Datenpunkt des Kanals, auch hier wird über eine Autovervollständigung die Auswahl vereinfacht.")]),e._v(" "),a("h3",{attrs:{id:"on-time"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#on-time","aria-hidden":"true"}},[e._v("#")]),e._v(" ON_TIME")]),e._v(" "),a("p",[e._v("Zeit in Sekunden nach der ein Schaltaktor/Dimmer nach dem anschalten wieder ausgeschaltet werden soll.")]),e._v(" "),a("p",[e._v("Dabei ist:")]),e._v(" "),a("ul",[a("li",[a("code",[e._v("undefined")]),e._v(": Keine automatische Ausschaltung")]),e._v(" "),a("li",[a("code",[e._v("number")]),e._v(": Eine feste Verzögerung in Sekunden")]),e._v(" "),a("li",[a("code",[e._v("global")]),e._v(", "),a("code",[e._v("flow")]),e._v(": Eine Verzögerung aus einer Context-Variablen")]),e._v(" "),a("li",[a("code",[e._v("msg")]),e._v(": Eine Verzögerung aus einem "),a("code",[e._v("msg")]),e._v("-Property.")])]),e._v(" "),a("h3",{attrs:{id:"set-mode"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#set-mode","aria-hidden":"true"}},[e._v("#")]),e._v(" set Mode")]),e._v(" "),a("p",[e._v("Eine Erweiterung für Geräte, die sowohl den rx_mode BURST als auch\nWAKEUP unterstützen wie z.B.: Batterie-Schaltaktoren oder Rauchmelder mit Sirenenfunktion.\nMit dem Parameter kann in diesem Fall angegeben werden,\nob der übergebene Wert über BURST oder WAKEUP übertragen werden soll.")]),e._v(" "),a("ul",[a("li",[e._v("WAKEUP: Überträgt den Wert sobald der entsprechende Empfänger aufacht.")]),e._v(" "),a("li",[e._v("BURST: Versucht alle BURST-Empfänger für die Übertragung aufzuwecken was sich\nnegativ auf den DutyCycle und die Batterielaufzeit aller Burst-Empfänger auswirkt.")])]),e._v(" "),a("h3",{attrs:{id:"flags"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#flags","aria-hidden":"true"}},[e._v("#")]),e._v(" Flags")]),e._v(" "),a("ul",[a("li",[a("p",[a("em",[a("strong",[e._v("Nur geänderte Werte ausgeben")])]),e._v("\nEin Event wird nur dann erzeugt, wenn sich der Wert seit dem letztn Event verändert hat.")])]),e._v(" "),a("li",[a("p",[a("em",[a("strong",[e._v("Während WORKING keine Werte ausgeben")])]),e._v('\nEs gibt Aktoren, z.B. Dimmer oder Rolladen, die  während einer Rampe (Öffnen/Schließen eines Rollladen, Dimmen einer Lampe)\nfortwährend den aktuellen Zustand ausgeben. Um nur den End-Status auszugeben kann diese Option benutzt werden.\nGebräuchlich auch bei Verwendung mit Dashboard-Nodes um "springende" Slider zu verhindern.')])]),e._v(" "),a("li",[a("p",[a("em",[a("strong",[e._v("Beim Start letzten bekannten Wert ausgeben")])]),e._v("\nWenn Node-RED gestartet wird, dann wird der letzte Wert (sofern in der ReGaHSS bekannt) ausgegeben.\nZ.B. um beim Start einen korrekten Wert an das Dashboard zu übergeben.\n"),a("strong",[e._v("Achtung")]),e._v(": Wird durch die ausgegebene Nachricht im weiteren Verlauf des Flows ein Homematic Wert gesetzt wirkt sich\njedes (Full-)Deployment negativ auf den DutyCycle aus.")])])]),e._v(" "),a("h3",{attrs:{id:"name"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#name","aria-hidden":"true"}},[e._v("#")]),e._v(" Name")]),e._v(" "),a("p",[e._v("Der Name dient zur Beschriftung des Node im Flow.")]),e._v(" "),a("h2",{attrs:{id:"input"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#input","aria-hidden":"true"}},[e._v("#")]),e._v(" Input")]),e._v(" "),a("p",[e._v("Für den Input des Value Node wird "),a("code",[e._v("msg.payload")]),e._v(" als der Wert verwendet der in den Datenpunkt geschrieben wird.")]),e._v(" "),a("p",[e._v("Die Bestimmung des Datenpunkts sowie des Kanals und der Schnittstellen können hier dynamisch\nsein. Dazu werden die entsprechenden Node-Attribute leer gelassen und über "),a("code",[e._v("msg")]),e._v(" gesetzt.")]),e._v(" "),a("p",[a("strong",[e._v("Option 1:")]),e._v("\nInterface, Channel und Datapoint können in der "),a("code",[e._v("msg")]),e._v(" als Properties angegeben werden:")]),e._v(" "),a("div",{staticClass:"language-json line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-json"}},[a("code",[a("span",{attrs:{class:"token punctuation"}},[e._v("{")]),e._v("\n  "),a("span",{attrs:{class:"token property"}},[e._v('"interface"')]),a("span",{attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),a("span",{attrs:{class:"token string"}},[e._v('"BidCos-RF"')]),a("span",{attrs:{class:"token punctuation"}},[e._v(",")]),e._v("\n  "),a("span",{attrs:{class:"token property"}},[e._v('"channel"')]),a("span",{attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),a("span",{attrs:{class:"token string"}},[e._v('"OEQ1868878:1"')]),a("span",{attrs:{class:"token punctuation"}},[e._v(",")]),e._v("\n  "),a("span",{attrs:{class:"token property"}},[e._v('"datapoint"')]),a("span",{attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),a("span",{attrs:{class:"token string"}},[e._v('"STATE"')]),a("span",{attrs:{class:"token punctuation"}},[e._v(",")]),e._v("\n  "),a("span",{attrs:{class:"token property"}},[e._v('"payload"')]),a("span",{attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),a("span",{attrs:{class:"token boolean"}},[e._v("true")]),e._v("\n"),a("span",{attrs:{class:"token punctuation"}},[e._v("}")]),e._v("\n")])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br"),a("span",{staticClass:"line-number"},[e._v("2")]),a("br"),a("span",{staticClass:"line-number"},[e._v("3")]),a("br"),a("span",{staticClass:"line-number"},[e._v("4")]),a("br"),a("span",{staticClass:"line-number"},[e._v("5")]),a("br"),a("span",{staticClass:"line-number"},[e._v("6")]),a("br")])]),a("p",[a("strong",[e._v("Option 2:")]),e._v("\nDer Datenpunkt kann über "),a("code",[e._v("msg.topic")]),e._v(" angegeben werden wobei die Werte mit Punkt getrennt werden:")]),e._v(" "),a("div",{staticClass:"language-json line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-json"}},[a("code",[a("span",{attrs:{class:"token punctuation"}},[e._v("{")]),e._v("\n  "),a("span",{attrs:{class:"token property"}},[e._v('"topic"')]),a("span",{attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),a("span",{attrs:{class:"token string"}},[e._v('"BidCos-RF.OEQ1868878:1.STATE"')]),a("span",{attrs:{class:"token punctuation"}},[e._v(",")]),e._v("\n  "),a("span",{attrs:{class:"token property"}},[e._v('"payload"')]),a("span",{attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),a("span",{attrs:{class:"token boolean"}},[e._v("true")]),e._v("\n"),a("span",{attrs:{class:"token punctuation"}},[e._v("}")]),e._v("\n")])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br"),a("span",{staticClass:"line-number"},[e._v("2")]),a("br"),a("span",{staticClass:"line-number"},[e._v("3")]),a("br"),a("span",{staticClass:"line-number"},[e._v("4")]),a("br")])]),a("h2",{attrs:{id:"output"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#output","aria-hidden":"true"}},[e._v("#")]),e._v(" Output")]),e._v(" "),a("p",[e._v("Der Value Node gibt nur Events aus, wenn Interface, Channel und Datapoint gesetzt sind.")])])},[],!1,null,null,null);r.options.__file="value.md";t.default=r.exports}}]);